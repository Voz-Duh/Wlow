
using LLVMSharp.Interop;

namespace Wlow.Types;

public readonly partial record struct IntMeta {
  ~include(implicits.mcs.api)
  ~define('body:
    'if(IntMeta,
      'on(type,
        if (type.bits >= this.bits)
          return to;
      )
      'on(cast,
        if (type.bits >= this.bits)
          return sc.bi.BuildIntCast2(val, to.Type(sc), true);
      )
    )
  )
  'implicits(body, i{bits})

  ~include(explicits.mcs.api)
  ~define('body:
    'if(IntMeta,
      'on(type,
        if (type.bits >= this.bits)
          return to;
      )
      'on(cast,
        if (type.bits >= this.bits)
          return sc.bi.BuildIntCast2(val, to.Type(sc), true);
      )
    )
  )
  'explicits(body, i{bits})
}
